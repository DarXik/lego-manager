function y(){}const B=t=>t;function w(t,n){for(const e in n)t[e]=n[e];return t}function E(t){return t()}function F(){return Object.create(null)}function j(t){t.forEach(E)}function q(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let i;function S(t,n){return t===n?!0:(i||(i=document.createElement("a")),i.href=n,t===i.href)}function U(t){return Object.keys(t).length===0}function v(t,...n){if(t==null){for(const r of n)r(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function C(t,n,e){t.$$.on_destroy.push(v(n,e))}function D(t,n,e,r){if(t){const o=m(t,n,e,r);return t[0](o)}}function m(t,n,e,r){return t[1]&&r?w(e.ctx.slice(),t[1](r(n))):e.ctx}function G(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const l=[],d=Math.max(n.dirty.length,o.length);for(let u=0;u<d;u+=1)l[u]=n.dirty[u]|o[u];return l}return n.dirty|o}return n.dirty}function H(t,n,e,r,o,l){if(o){const d=m(n,e,r,l);t.p(d,o)}}function I(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function J(t,n,e){return t.set(e),n}function K(t){return t&&q(t.destroy)?t.destroy:y}let f;function _(t){f=t}function k(){if(!f)throw new Error("Function called outside component initialization");return f}function L(t){k().$$.on_mount.push(t)}function N(t){k().$$.after_update.push(t)}function Q(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(r=>r.call(this,n))}const a=[],b=[];let s=[];const g=[],x=Promise.resolve();let p=!1;function O(){p||(p=!0,x.then(M))}function R(){return O(),x}function z(t){s.push(t)}const h=new Set;let c=0;function M(){if(c!==0)return;const t=f;do{try{for(;c<a.length;){const n=a[c];c++,_(n),A(n.$$)}}catch(n){throw a.length=0,c=0,n}for(_(null),a.length=0,c=0;b.length;)b.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];h.has(e)||(h.add(e),e())}s.length=0}while(a.length);for(;g.length;)g.pop()();p=!1,h.clear(),_(t)}function A(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(z)}}function T(t){const n=[],e=[];s.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),s=n}export{a as A,O as B,G as a,z as b,D as c,C as d,J as e,S as f,I as g,K as h,B as i,N as j,b as k,q as l,Q as m,y as n,L as o,F as p,M as q,j as r,P as s,R as t,H as u,U as v,T as w,f as x,_ as y,E as z};
