import { c as create_ssr_component, e as escape, b as add_attribute, d as each } from "../../../chunks/ssr.js";
import "../../../chunks/store.js";
import "../../../chunks/client.js";
const css = {
  code: ".currentKey.svelte-zqch1v{--tw-bg-opacity:1;background-color:rgb(161 161 170 / var(--tw-bg-opacity));--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity));transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { userSets } from \\"$lib/store\\";\\nimport { goto } from \\"$app/navigation\\";\\nimport { onMount } from \\"svelte\\";\\nexport let data;\\nlet sets = [];\\n$:\\n  if (data && sets.length == 0) {\\n    sets = data.sets.slice().sort((a, b) => a.name > b.name);\\n    for (const key in sets) {\\n      sets[key].localId = parseInt(key);\\n    }\\n  }\\nlet ascending = true;\\nlet currentKey = \\"name\\";\\n$:\\n  sort = (filter) => {\\n    ascending = !ascending;\\n    let order = !ascending;\\n    currentKey = filter;\\n    sets = sets.slice().sort((a, b) => {\\n      if (a[filter] < b[filter]) {\\n        return -1 * (order ? 1 : -1);\\n      }\\n      if (a[filter] > b[filter]) {\\n        return 1 * (order ? 1 : -1);\\n      }\\n      return 0;\\n    });\\n  };\\nlet w;\\nonMount(() => {\\n  w = window.innerWidth;\\n});\\n<\/script>\\r\\n\\r\\n<section>\\r\\n    <article class=\\"flex max-md:flex-col\\">\\r\\n        <div class=\\"p-8 border-r-3 border-zinc-600 w-full md:w-1/2\\">\\r\\n            <h1\\r\\n                class=\\"font-bold uppercase  text-3xl md:text-4xl lg:text-5xl\\"\\r\\n            >\\r\\n                Your sets <span class=\\"text-xl text-zinc-400\\">({sets.length})</span>\\r\\n            </h1>\\r\\n        </div>\\r\\n        <div class=\\"w-full md:w-1/2 flex h-full justify-center md:justify-start md:self-end border-main\\">\\r\\n            <div class=\\"flex border-zinc-600\\">\\r\\n                <button\\r\\n                    on:click={() => sort(\\"name\\")}\\r\\n                    class:currentKey={currentKey === \\"name\\"}\\r\\n                    class=\\"uppercase max-md:border-l-3 border-r-3 border-zinc-600 p-2 flex items-center gap-2\\"\\r\\n                    ><p>name</p>\\r\\n                    <svg\\r\\n                        class=\\"w-3.5 h-3.5 transition-all\\"\\r\\n                        class:rotate-180={ascending && currentKey === \\"name\\"}\\r\\n                        width=\\"800px\\"\\r\\n                        height=\\"800px\\"\\r\\n                        viewBox=\\"0 0 24 24\\"\\r\\n                        fill={currentKey === \\"name\\" ? \\"#fffffff\\" : \\"#e4e4e7\\"}\\r\\n                        xmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n                    >\\r\\n                        <path\\r\\n                            d=\\"M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z\\"\\r\\n                            stroke={currentKey === \\"name\\"\\r\\n                                ? \\"#fffffff\\"\\r\\n                                : \\"#e4e4e7\\"}\\r\\n                            stroke-width=\\"1.5\\"\\r\\n                        />\\r\\n                    </svg>\\r\\n                </button>\\r\\n                <button\\r\\n                    on:click={() => sort(\\"themeName\\")}\\r\\n                    class:currentKey={currentKey === \\"themeName\\"}\\r\\n                    class=\\"uppercase border-r-3 border-zinc-600 p-2 flex items-center gap-2\\"\\r\\n                    ><p>Theme</p>\\r\\n                    <svg\\r\\n                        class=\\"w-3.5 h-3.5 transition-all\\"\\r\\n                        class:rotate-180={ascending &&\\r\\n                            currentKey === \\"themeName\\"}\\r\\n                        width=\\"800px\\"\\r\\n                        height=\\"800px\\"\\r\\n                        viewBox=\\"0 0 24 24\\"\\r\\n                        fill={currentKey === \\"themeName\\"\\r\\n                            ? \\"#fffffff\\"\\r\\n                            : \\"#e4e4e7\\"}\\r\\n                        xmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n                    >\\r\\n                        <path\\r\\n                            d=\\"M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z\\"\\r\\n                            stroke={currentKey === \\"themeName\\"\\r\\n                                ? \\"#fffffff\\"\\r\\n                                : \\"#e4e4e7\\"}\\r\\n                            stroke-width=\\"1.5\\"\\r\\n                        />\\r\\n                    </svg>\\r\\n                </button>\\r\\n\\r\\n                <button\\r\\n                    on:click={() => sort(\\"setNumber\\")}\\r\\n                    class:currentKey={currentKey === \\"setNumber\\"}\\r\\n                    class=\\"uppercase border-r-3 border-zinc-600 p-2 flex items-center gap-2\\"\\r\\n                    ><p>Set number</p>\\r\\n                    <svg\\r\\n                        class=\\"w-3.5 h-3.5 transition-all\\"\\r\\n                        class:rotate-180={ascending &&\\r\\n                            currentKey === \\"setNumber\\"}\\r\\n                        width=\\"800px\\"\\r\\n                        height=\\"800px\\"\\r\\n                        viewBox=\\"0 0 24 24\\"\\r\\n                        fill={currentKey === \\"setNumber\\"\\r\\n                            ? \\"#fffffff\\"\\r\\n                            : \\"#e4e4e7\\"}\\r\\n                        xmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n                    >\\r\\n                        <path\\r\\n                            d=\\"M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z\\"\\r\\n                            stroke={currentKey === \\"setNumber\\"\\r\\n                                ? \\"#fffffff\\"\\r\\n                                : \\"#e4e4e7\\"}\\r\\n                            stroke-width=\\"1.5\\"\\r\\n                        />\\r\\n                    </svg>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </article>\\r\\n    <article class=\\"p-8 border-main\\">\\r\\n        <div\\r\\n            class=\\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 lg:auto-rows-fr gap-6 md:w-fit max-md:flex flex-col items-center w-full\\"\\r\\n        >\\r\\n            {#if sets.length > 0}\\r\\n                {#each sets as set}\\r\\n                    <button\\r\\n                        class=\\"w-64 h-fit md:w-72 md:h-72 group\\"\\r\\n                        on:click={() => goto(`/set/${set.id}`)}\\r\\n                    >\\r\\n                        <div\\r\\n                            class=\\"group-hover:border-zinc-100 transition-all group-active:scale-95 group-focus:border-zinc-100 bg-black/50 border border-gray-600/50 h-full w-full \\"\\r\\n                        >\\r\\n                            <div\\r\\n                                class=\\"border-b border-gray-600/50 group-hover:border-zinc-100 transition-all py-2 px-4 h-[15%]\\"\\r\\n                            >\\r\\n                                <p class=\\"text-start\\">{set.localId + 1}</p>\\r\\n                            </div>\\r\\n                            <div\\r\\n                                class=\\"flex flex-col justify-between py-2 px-4 md:h-[85%]\\"\\r\\n                            >\\r\\n                                <div>\\r\\n                                    <p class=\\"text-xl font-bold text-start max-md:mb-8\\">\\r\\n                                        {set.name}\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <p class=\\"text-start h-fit max-md:hidden\\">\\r\\n                                        <span class=\\"text-gray-500 text-sm\\"\\r\\n                                            >theme</span\\r\\n                                        >\\r\\n                                        {set.themeName}\\r\\n                                    </p>\\r\\n                                    <p class=\\"text-start\\">\\r\\n                                        <span class=\\"text-gray-500 text-sm\\"\\r\\n                                            >set no.</span\\r\\n                                        >\\r\\n                                        {set.setNumber}\\r\\n                                    </p>\\r\\n                                    <p class=\\"text-start\\">\\r\\n                                        <span class=\\"text-gray-500 text-sm\\"\\r\\n                                            >added on</span\\r\\n                                        >\\r\\n                                        {new Date(set.addedOn)\\r\\n                                            .toLocaleString(\\"de-DE\\")\\r\\n                                            .split(\\",\\")[0]}\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                {/each}\\r\\n            {:else}\\r\\n                <p class=\\"italic text-gray-400 bg-red\\">No sets found</p>\\r\\n            {/if}\\r\\n        </div>\\r\\n    </article>\\r\\n</section>\\r\\n\\r\\n<style lang=\\"postcss\\">\\r\\n    .currentKey {\\n    --tw-bg-opacity: 1;\\n    background-color: rgb(161 161 170 / var(--tw-bg-opacity));\\n    --tw-text-opacity: 1;\\n    color: rgb(0 0 0 / var(--tw-text-opacity));\\n    transition-property: all;\\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n    transition-duration: 150ms\\n}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAyLI,yBAAY,CACZ,eAAe,CAAE,CAAC,CAClB,gBAAgB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CACzD,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAC1C,mBAAmB,CAAE,GAAG,CACxB,0BAA0B,CAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxD,mBAAmB,CAAE,KAAK;AAC9B"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  let sets = [];
  if ($$props.data === void 0 && $$bindings.data && data !== void 0)
    $$bindings.data(data);
  $$result.css.add(css);
  {
    if (data && sets.length == 0) {
      sets = data.sets.slice().sort((a, b) => a.name > b.name);
      for (const key in sets) {
        sets[key].localId = parseInt(key);
      }
    }
  }
  return `<section><article class="flex max-md:flex-col"><div class="p-8 border-r-3 border-zinc-600 w-full md:w-1/2"><h1 class="font-bold uppercase text-3xl md:text-4xl lg:text-5xl">Your sets <span class="text-xl text-zinc-400">(${escape(sets.length)})</span></h1></div> <div class="w-full md:w-1/2 flex h-full justify-center md:justify-start md:self-end border-main"><div class="flex border-zinc-600"><button class="${[
    "uppercase max-md:border-l-3 border-r-3 border-zinc-600 p-2 flex items-center gap-2 svelte-zqch1v",
    "currentKey"
  ].join(" ").trim()}"><p data-svelte-h="svelte-6p5zwt">name</p> <svg class="${[
    "w-3.5 h-3.5 transition-all",
    "rotate-180"
  ].join(" ").trim()}" width="800px" height="800px" viewBox="0 0 24 24"${add_attribute("fill", "#fffffff", 0)} xmlns="http://www.w3.org/2000/svg"><path d="M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z"${add_attribute("stroke", "#fffffff", 0)} stroke-width="1.5"></path></svg></button> <button class="${[
    "uppercase border-r-3 border-zinc-600 p-2 flex items-center gap-2 svelte-zqch1v",
    ""
  ].join(" ").trim()}"><p data-svelte-h="svelte-1vnav9h">Theme</p> <svg class="${[
    "w-3.5 h-3.5 transition-all",
    ""
  ].join(" ").trim()}" width="800px" height="800px" viewBox="0 0 24 24"${add_attribute("fill", "#e4e4e7", 0)} xmlns="http://www.w3.org/2000/svg"><path d="M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z"${add_attribute("stroke", "#e4e4e7", 0)} stroke-width="1.5"></path></svg></button> <button class="${[
    "uppercase border-r-3 border-zinc-600 p-2 flex items-center gap-2 svelte-zqch1v",
    ""
  ].join(" ").trim()}"><p data-svelte-h="svelte-1gwhhv3">Set number</p> <svg class="${[
    "w-3.5 h-3.5 transition-all",
    ""
  ].join(" ").trim()}" width="800px" height="800px" viewBox="0 0 24 24"${add_attribute("fill", "#e4e4e7", 0)} xmlns="http://www.w3.org/2000/svg"><path d="M3.16496 4.49747L10.5275 21.0072C11.1178 22.3309 12.8822 22.3309 13.4725 21.0072L20.835 4.49747C21.5021 3.00163 20.0209 1.45006 18.6331 2.19099L12.7294 5.34303C12.2702 5.58818 11.7298 5.58818 11.2706 5.34303L5.36689 2.19099C3.97914 1.45007 2.49789 3.00163 3.16496 4.49747Z"${add_attribute("stroke", "#e4e4e7", 0)} stroke-width="1.5"></path></svg></button></div></div></article> <article class="p-8 border-main"><div class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 lg:auto-rows-fr gap-6 md:w-fit max-md:flex flex-col items-center w-full">${sets.length > 0 ? `${each(sets, (set) => {
    return `<button class="w-64 h-fit md:w-72 md:h-72 group"><div class="group-hover:border-zinc-100 transition-all group-active:scale-95 group-focus:border-zinc-100 bg-black/50 border border-gray-600/50 h-full w-full "><div class="border-b border-gray-600/50 group-hover:border-zinc-100 transition-all py-2 px-4 h-[15%]"><p class="text-start">${escape(set.localId + 1)}</p></div> <div class="flex flex-col justify-between py-2 px-4 md:h-[85%]"><div><p class="text-xl font-bold text-start max-md:mb-8">${escape(set.name)} </p></div> <div><p class="text-start h-fit max-md:hidden"><span class="text-gray-500 text-sm" data-svelte-h="svelte-u7wq0r">theme</span> ${escape(set.themeName)}</p> <p class="text-start"><span class="text-gray-500 text-sm" data-svelte-h="svelte-fckjoh">set no.</span> ${escape(set.setNumber)}</p> <p class="text-start"><span class="text-gray-500 text-sm" data-svelte-h="svelte-o3ztp3">added on</span> ${escape(new Date(set.addedOn).toLocaleString("de-DE").split(",")[0])} </p></div> </div></div> </button>`;
  })}` : `<p class="italic text-gray-400 bg-red" data-svelte-h="svelte-68xbra">No sets found</p>`}</div></article> </section>`;
});
export {
  Page as default
};
